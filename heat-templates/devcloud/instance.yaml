heat_template_version: ocata

parameters:

  public_net:
    type: string
    default: public

  cidr:
    type: string
    default: "192.168.100.0/24"

  key:
    type: string
    default: pshchelo
    description: nova key name and name of the user to create in the VM

  flavor:
    type: string
    default: oc_aio_large_4

  image:
    type: string
    default: xenial-server-cloudimg-amd64-qcow

  az:
    type: string
    default: nova

  name:
    type: string
    default: devstack
    description: name of the vm to be appended to name of the key


resources:

  network:
    type: OS::Neutron::Net

  subnet:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: network }
      cidr: { get_param: cidr }
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
        - 172.18.224.6

  server_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: network }
      fixed_ips:
        - subnet: { get_resource: subnet }
      port_security_enabled: False

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_net }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: router }
      subnet: { get_resource: subnet }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }

  floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_resource: server_port }

  config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        package_update: true
        users:
          - default
          - name: { get_param: key }
            shell: /bin/bash
            sudo: "ALL=(ALL) NOPASSWD:ALL"
            ssh_authorized_keys:
              - { get_file: "https://github.com/pshchelo.keys" }

  server:
    type: OS::Nova::Server
    properties:
      metadata:
        group: { get_param: key }
      image: { get_param: image }
      flavor: { get_param: flavor }
      availability_zone: { get_param: az }
      key_name: { get_param: key }
      name: { list_join: [ '-', [ {get_param: key }, {get_param: name } ] ] }
      networks:
        - port: { get_resource: server_port }
      user_data_format: RAW
      user_data: { get_resource: config }


outputs:
  ip:
    description: IP of the server
    value: { get_attr: [floating_ip, floating_ip_address ] }
