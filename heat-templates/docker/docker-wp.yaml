heat_template_version: 2015-10-15
 
description: >
  Heat Docker template using software deployments.
 
parameters:
 
  key_name:
    type: string
    description : Name of a KeyPair to enable SSH access to the instance
    default: demo
 
  instance_type:
    type: string
    description: Instance type for WordPress server
    default: m1.heat

  image:
    type: string
    description: >
      Name or ID of the image to use for the Docker server.  This needs to be
      built with os-collect-config tools from a fedora base image.
    default: fedora-heat-test-image

  network:
    type: string
    default: private
  
  public_net:
    type: string
    default: public

  docker_port:
    type: number
    description: Port the dockerctl will be listening
    default: 2345

resources:
  docker_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Ping, SSH, Docker
      rules:
      - protocol: icmp
      - protocol: tcp
        port_range_min: 22
        port_range_max: 22
      - protocol: tcp
        port_range_min: 80
        port_range_max: 80
      - protocol: tcp
        port_range_min: { get_param: docker_port }
        port_range_max: { get_param: docker_port }
 
  port:
    type: OS::Neutron::Port
    properties:
      replacement_policy: AUTO
      network: { get_param: network }
      security_groups:
      - get_resource: docker_sg

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      port_id: { get_resource: port }
      floating_network: { get_param: public_net }
  
  docker_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        template: |
          #!/bin/bash -v
          setenforce 0
          yum -y install docker-io
          cp /usr/lib/systemd/system/docker.service /etc/systemd/system/
          sed -i -e '/ExecStart/ { s,fd://,tcp://0.0.0.0:$DOCKER_PORT, }' /etc/systemd/system/docker.service
          systemctl restart docker.service
        params:
          $DOCKER_PORT: { get_param: docker_port }
 
  docker_deployment:
    type: OS::Heat::SoftwareDeployment
    properties:
      config: {get_resource: docker_config}
      server: {get_resource: docker_host}
 
  docker_host:
    type: OS::Nova::Server
    properties:
      image: {get_param: image}
      flavor: {get_param: instance_type}
      key_name: {get_param: key_name}
      networks:
        - port: {get_resource: port}
      user_data_format: SOFTWARE_CONFIG
 
  database_password:
    type: OS::Heat::RandomString
 
  database:
    type: DockerInc::Docker::Container
    depends_on: docker_deployment
    properties:
      image: mysql
      name: db
      docker_endpoint:
        str_replace:
          template: http://host:port
          params:
            host: {get_attr: [floating_ip, floating_ip_address]}
            port: { get_param: docker_port }
      env:
        - {str_replace: {template: MYSQL_ROOT_PASSWORD=password,
                         params: {password: {get_attr: [database_password, value]}}}}
 
  wordpress:
    type: DockerInc::Docker::Container
    depends_on: database
    properties:
      image: wordpress
      links:
        db: mysql
      port_bindings:
        80/tcp: [{"HostPort": "80"}]
      docker_endpoint:
        str_replace:
          template: http://host:port
          params:
            host: {get_attr: [floating_ip, floating_ip_address]}
            port: { get_param: docker_port }
 
outputs:
  url:
    description: Public address of the web site
    value:
      str_replace:
        template: http://host/wordpress
        params:
            host: {get_attr: [floating_ip, floating_ip_address]}
